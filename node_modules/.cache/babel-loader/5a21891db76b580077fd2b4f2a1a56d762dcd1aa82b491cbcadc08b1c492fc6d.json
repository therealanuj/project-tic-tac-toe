{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\tictac\\\\src\\\\Board.js\";\nimport { useState } from \"react\";\nimport Square from \"./Square\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay,\n  totalMove\n}) {\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) return;\n    const nextSquares = squares.slice();\n    nextSquares[i] = xIsNext ? \"X\" : \"O\";\n    onPlay(nextSquares);\n  }\n  function calculateWinner(squares) {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] == squares[b] && squares[a] == squares[c]) return squares[a];\n    }\n    return null;\n  }\n  let winner = calculateWinner(squares);\n  let status = winner ? \"Winner: \" + winner : \"Next Turn:\" + (xIsNext ? \"X\" : \"O\");\n  if (totalMove === 8 && winner === null) status = \"Draw\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), Array(3).fill(null).map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: Array(3).fill(null).map((_, j) => {\n        const squareIndex = i * 3 + j;\n        return /*#__PURE__*/_jsxDEV(Square, {\n          value: squares[squareIndex],\n          onSquareClick: () => handleClick(squareIndex)\n        }, squareIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }, this);\n      })\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["useState","Square","jsxDEV","_jsxDEV","Board","xIsNext","squares","onPlay","totalMove","handleClick","i","calculateWinner","nextSquares","slice","lines","length","a","b","c","winner","status","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Array","fill","map","_","j","squareIndex","value","onSquareClick","_c","$RefreshReg$"],"sources":["D:/react/tictac/src/Board.js"],"sourcesContent":["import { useState } from \"react\";\nimport Square from \"./Square\";\nfunction Board({ xIsNext, squares, onPlay, totalMove }) {\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) return;\n    const nextSquares = squares.slice();\n\n    nextSquares[i] = xIsNext ? \"X\" : \"O\";\n\n    onPlay(nextSquares);\n  }\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] == squares[b] && squares[a] == squares[c])\n        return squares[a];\n    }\n    return null;\n  }\n  let winner = calculateWinner(squares);\n  let status = winner\n    ? \"Winner: \" + winner\n    : \"Next Turn:\" + (xIsNext ? \"X\" : \"O\");\n  if(totalMove===8&&winner===null)\n  status=\"Draw\";\n\n  return (\n    <div>\n      <div className=\"status\">{status}</div>\n      {Array(3).fill(null).map((_, i) => (\n          <div key={i} className=\"board-row\">\n            {Array(3).fill(null).map((_, j) => {\n                const squareIndex = i * 3 + j;\n                return (\n                  <Square key={squareIndex} value={squares[squareIndex]} onSquareClick={() => handleClick(squareIndex)} />\n                );\n              })}\n          </div>\n        ))}\n    </div>\n  );\n}\nexport default Board;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}